{
    "swagger": "2.0", 
    "info": {
        "description": "OpenFog Multi-down [https://openfog.github.io](https://openfog.github.io) A multi-source downloader with fog computing working on the Fog.", 
        "version": "1.0.0", 
        "title": "OpenFog Multidown", 
        "termsOfService": "https://openfog.github.io", 
        "contact": {
            "email": "service@shadowfog.com"
        }, 
        "license": {
            "name": "Apache 2.0", 
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    }, 
    "host": "openfog.github.io", 
    "basePath": "/v1/multi-down", 
    "tags": [
        {
            "name": "Scheduler", 
            "description": "request and send files"
        }, 
        {
            "name": "file", 
            "description": "request and send files"
        }, 
        {
            "name": "token", 
            "description": "Operations about token"
        }
    ], 
    "schemes": [
        "https"
    ], 
    "paths": {
        "/file/request": {
            "post": {
                "tags": [
                    "file"
                ], 
                "summary": "Get a file or a chunk request", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "required": true, 
                        "schema": {
                            "$ref": "#/definitions/FileReq"
                        }
                    }
                ]
            }
        }, 
        "/file/start": {
            "post": {
                "tags": [
                    "file"
                ], 

                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/FileSendStart"
                        }
                    }
                }
            }
        }, 
        "/file/data": {
            "post": {
                "tags": [
                    "file"
                ], 
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/FileSendData"
                        }
                    }
                }
            }
        }, 
        "/file/end": {
            "post": {
                "tags": [
                    "file"
                ], 
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/FileSendEnd"
                        }
                    }
                }
            }
        }, 

        "/token": {
            "post": {
                "tags": [
                    "token"
                ], 
                "operationId": "token", 

                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "required": true, 
                        "schema": {
                            "$ref": "#/definitions/TokenReq"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    }
                }
            }
        },
        "/scheduler/peers": {
            "post": {
                "tags": [
                    "Scheduler"
                ], 
                "operationId": "Scheduler", 

                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "required": true, 
                        "schema": {
                            "$ref": "#/definitions/PeersReq"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/Peers"
                        }
                    }
                }
            }
        }

    }, 

 
    "definitions": {

        "Peers": {
            "type": "object", 
            "properties": {

                "peers_http": {
                    "type": "integer", 
                    "example": 15
                },
                "peers_datachannel": {
                    "type": "integer", 
                    "example": 18
                },

                "peers": {

                        "type": "array", 
                        "xml": {
                            "name": "tag", 
                            "wrapped": true
                        }, 
                        "items": {
                            "$ref": "#/definitions/Peer"
                        }
                }
            }, 
            "xml": {
                "name": "Peers"
            }
        },
 
        "Peer": {
            "type": "object", 
            "properties": {
                    "ip": {
                        "type": "string", 
                        "example": "119.28.2.207"
                    }, 
                    "port": {
                        "type": "string",
                        "example": "18752"
                    }, 
                    "type": {
                            "type": "string", 
                            "enum": [
                                "http", 
                                "datachannel", 
                                "websocket"
                            ]
                    }
            },
            "xml": {
                "name": "Peer"
            }
        } ,

        "PeersReq": {
            "type": "object", 
            "properties": {
                "token": {
                    "type": "string",
                    "example": "64c773a355b3c75e1b79f63a46aa2158"
                }, 
                "date": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "os": {
                    "type": "string", 
                    "enum": [
                        "linux", 
                        "window", 
                        "apple"
                    ]
                }, 
                "browser": {
                    "type": "string", 
                    "enum": [
                        "firefox", 
                        "chrome", 
                        "afari", 
                        "IE", 
                        "opera"
                    ]
                },
                "nat_type": {
                    "type": "string", 
                    "enum": [
                        "full_cone", 
                        "ip_restricted", 
                        "port_restricted", 
                        "symmetric"
                    ]
                }, 

                "webrtc": {
                    "type": "boolean", 
                    "default": true
                },

                "file": {
                            "properties": {
                                    "index": {
                                        "type": "integer", 
                                        "example": 1
                                    }, 
                                    "uuid": {
                                        "type": "string",
                                        "example": "uuid"
                                    }, 
                                    "url": {
                                            "type": "string", 
                                            "example": "vedio/pear.mp4"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "video/mp4"
                                    }
                            }
                }
            }, 
            "xml": {
                "name": "PeersReq"
            }
        },

        "TokenReq": {
            "type": "object", 
            "properties": {
                "peerid": {
                    "type": "string",
                    "example": "c4ecefb847c3b34bd45a4f81befc78d9"
                }, 
                "peersecret": {
                    "type": "string",
                    "example": "972bb04c38383fae108b0c135fc007b4"
                }
            }, 
            "xml": {
                "name": "TokenReq"
            }
        },
        "Token": {
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "64c773a355b3c75e1b79f63a46aa2158"
                }, 
                "expires_in": {
                    "type": "integer", 
                    "example": 3600
                }
            }, 
            "xml": {
                "name": "TokenReq"
            }
        },


        "FileReq": {
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string",
                    "example": "get"
                }, 
                "uuid": {
                    "type": "string",
                    "example": "uuid"
                }, 
                "index": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "bitmap": {
                    "type": "string",
                    "example": "1101010111100111110011100001010"
                }
            }, 
            "xml": {
                "name": "FileReq"
            }
        },

        "FileSendStart": {
            "type": "object", 
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "DZEKC36X-FPKQPVI"
                }, 
                "maxChunks": {
                    "type": "integer", 
                    "example": 53
                }, 
                "type": {
                    "type": "string",
                    "example": "video/mp4"
                },
                "start": {
                    "type": "boolean", 
                    "default": true
                }
            }, 
            "xml": {
                "name": "FileSendStart"
            }
        },

        "FileSendEnd": {
            "type": "object", 
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "DZEKC36X-FPKQPVI"
                }, 
                "maxChunks": {
                    "type": "integer", 
                    "example": 53
                }, 
                "type": {
                    "type": "string",
                    "example": "video/mp4"
                },
                "range": {
                    "type": "string",
                    "example": "0-1048575"
                },
                "end": {
                    "type": "boolean", 
                    "default": true
                }
            }, 
            "xml": {
                "name": "FileSendEnd"
            }
        },

        "FileSendData": {
            "type": "object", 
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "DZEKC36X-FPKQPVI"
                }, 
                "maxChunks": {
                    "type": "integer", 
                    "example": 53
                }, 
                "currentPosition": {
                    "type": "integer", 
                    "example": 1
                }, 
                "value": {
                    "type": "string",
                    "example": "data:;base64,AAAAGGZ0eXB"
                }
            }, 
            "xml": {
                "name": "FileSendData"
            }
        },

        "Order": {
            "type": "object", 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "petId": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "quantity": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "shipDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "status": {
                    "type": "string", 
                    "description": "Order Status", 
                    "enum": [
                        "placed", 
                        "approved", 
                        "delivered"
                    ]
                }, 
                "complete": {
                    "type": "boolean", 
                    "default": false
                }
            }, 
            "xml": {
                "name": "Order"
            }
        }, 
        "Category": {
            "type": "object", 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "xml": {
                "name": "Category"
            }
        }, 
        "User": {
            "type": "object", 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "username": {
                    "type": "string"
                }, 
                "firstName": {
                    "type": "string"
                }, 
                "lastName": {
                    "type": "string"
                }, 
                "email": {
                    "type": "string"
                }, 
                "password": {
                    "type": "string"
                }, 
                "phone": {
                    "type": "string"
                }, 
                "userStatus": {
                    "type": "integer", 
                    "format": "int32", 
                    "description": "User Status"
                }
            }, 
            "xml": {
                "name": "User"
            }
        }, 
        "Tag": {
            "type": "object", 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "name": {
                    "type": "string"
                }
            }, 
            "xml": {
                "name": "Tag"
            }
        }, 
        "Pet": {
            "type": "object", 
            "required": [
                "name", 
                "photoUrls"
            ], 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "category": {
                    "$ref": "#/definitions/Category"
                }, 
                "name": {
                    "type": "string", 
                    "example": "doggie"
                }, 
                "photoUrls": {
                    "type": "array", 
                    "xml": {
                        "name": "photoUrl", 
                        "wrapped": true
                    }, 
                    "items": {
                        "type": "string"
                    }
                }, 
                "tags": {
                    "type": "array", 
                    "xml": {
                        "name": "tag", 
                        "wrapped": true
                    }, 
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                }, 
                "status": {
                    "type": "string", 
                    "description": "pet status in the store", 
                    "enum": [
                        "available", 
                        "pending", 
                        "sold"
                    ]
                }
            }, 
            "xml": {
                "name": "Pet"
            }
        }, 
        "ApiResponse": {
            "type": "object", 
            "properties": {
                "code": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "type": {
                    "type": "string"
                }, 
                "message": {
                    "type": "string"
                }
            }
        }
    }, 
    "externalDocs": {
        "description": "Find out more about OpenFog", 
        "url": "http://openfog.github.io"
    }
}
